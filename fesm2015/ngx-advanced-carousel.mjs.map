{"version":3,"file":"ngx-advanced-carousel.mjs","sources":["../../projects/ngx-advanced-carousel/src/lib/rxjs.observable.resize.ts","../../projects/ngx-advanced-carousel/src/lib/ngx-advanced-carousel-item.directive.ts","../../projects/ngx-advanced-carousel/src/lib/ngx-advanced-carousel.component.html","../../projects/ngx-advanced-carousel/src/lib/ngx-advanced-carousel.component.ts","../../projects/ngx-advanced-carousel/src/lib/ngx-advanced-carousel.module.ts","../../projects/ngx-advanced-carousel/src/public-api.ts","../../projects/ngx-advanced-carousel/src/ngx-advanced-carousel.ts"],"sourcesContent":["import {ResizeObserver} from '@juggle/resize-observer';\nimport { Observable, Subscriber } from 'rxjs';\nimport { debounceTime, finalize, tap } from 'rxjs/operators';\n\n/**\n * An observable creator for element resize.\n * @param elm the watch element.\n * @param cb when resize complete, call back function.\n * @param time resize emit time, default is 200\n */\nexport function resizeObservable(\n  elm: HTMLElement,\n  cb: () => void,\n  time = 200,\n): Observable<any> {\n  let elmObserve$: ResizeObserver;\n  return new Observable((observer: Subscriber<any>) => {\n    elmObserve$ = new ResizeObserver((entries, obs) => {\n      observer.next(elmObserve$);\n    });\n    elmObserve$.observe(elm);\n  }).pipe(\n    debounceTime(time),\n    tap(() => {\n      cb();\n    }),\n    finalize(() => {\n      elmObserve$.unobserve(elm);\n      elmObserve$.disconnect();\n    }),\n  );\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[ngx-advanced-carousel-item]',\n})\nexport class NgxAdvancedCarouselItemDirective {\n  constructor() {}\n}\n","<div class=\"carousel-container\">\n  <!-- main content -->\n  <div #containerElm class=\"carousel\">\n    <div ngx-advanced-carousel-container class=\"content\">\n      <div\n        class=\"item cursor-pointer visible_important\"\n        [ngStyle]=\"{\n          display: i % (scrollNum * gridBy.row) === 0 ? '' : 'none'\n        }\"\n        ngx-advanced-carousel-item\n        *ngFor=\"let _x of data; let i = index; trackBy: trackByFcn\"\n      >\n        <div\n          class=\"slide\"\n          [ngClass]=\"gridBy.col != 1 || gridBy.row != 1 ? 'flex-wrap' : ''\"\n          #viewArea\n          *ngIf=\"i % (scrollNum * gridBy.row) === 0\"\n        >\n          <ng-container\n            *ngFor=\"\n              let item of data | slice: i:i + scrollNum * gridBy.row;\n              let j = index\n            \"\n          >\n            <ng-container\n              *ngTemplateOutlet=\"\n                carouselItemTemplate;\n                context: {\n                  $implicit: item\n                }\n              \"\n            >\n            </ng-container>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- left -->\n  <div\n    #prev\n    *ngIf=\"contentPrev\"\n    class=\"direction left\"\n    [ngClass]=\"[\n      showButtonsMethod !== 'auto-hide' ||\n      (showButtonsMethod === 'auto-hide' && currentIndex > 0) ||\n      infinite\n        ? 'visible'\n        : 'invisible',\n      showButtonsMethod !== 'auto-disable' ||\n      (showButtonsMethod === 'auto-disable' && currentIndex > 0) ||\n      infinite\n        ? ''\n        : 'disabled'\n    ]\"\n  >\n    <ng-container *ngTemplateOutlet=\"contentPrev\"></ng-container>\n  </div>\n  <!--  right -->\n  <div\n    #next\n    *ngIf=\"contentNext\"\n    class=\"direction right\"\n    [ngClass]=\"[\n      showButtonsMethod !== 'auto-hide' ||\n      (showButtonsMethod === 'auto-hide' &&\n        realIndex < data.length &&\n        _showNum < data.length) ||\n      infinite\n        ? 'visible'\n        : 'invisible',\n      showButtonsMethod !== 'auto-disable' ||\n      (showButtonsMethod === 'auto-disable' &&\n        realIndex < data.length - 1 &&\n        _showNum < data.length - 1) ||\n      infinite\n        ? ''\n        : 'disabled'\n    ]\"\n  >\n    <ng-container *ngTemplateOutlet=\"contentNext\"></ng-container>\n  </div>\n  <!-- indicators -->\n  <ul class=\"indicators\" *ngIf=\"dotElm\">\n    <ng-container *ngFor=\"let dot of itemElms; let i = index\">\n      <li\n        *ngIf=\"\n          (i + gridBy.col * gridBy.row) % (scrollNum * gridBy.row) === 0 &&\n          (infinite ? (i >= _showNum * 2 &&\n          i + _showNum * 2 < itemElms.length) : !infinite)\n        \"\n        (click)=\"currentIndex = i\"\n      >\n        <ng-container\n          *ngTemplateOutlet=\"\n            dotElm;\n            context: {\n              $implicit: {\n                index: i,\n                currentIndex: currentIndex\n              }\n            }\n          \"\n        >\n        </ng-container>\n      </li>\n    </ng-container>\n  </ul>\n  <!-- progress -->\n  <div *ngIf=\"progressElm && autoplay\" #progress>\n    <ng-container *ngTemplateOutlet=\"progressElm\"> </ng-container>\n  </div>\n\n  <div class=\"mask\" *ngIf=\"grabbing\">\n    <ng-container *ngIf=\"leaveObs$ | async\"></ng-container>\n  </div>\n</div>\n","import { DOCUMENT, isPlatformBrowser } from \"@angular/common\";\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewChildren,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport {\n  BehaviorSubject,\n  forkJoin,\n  fromEvent,\n  interval,\n  merge,\n  Observable,\n  of,\n  Subject,\n  Subscription,\n  timer,\n} from \"rxjs\";\nimport {\n  bufferCount,\n  filter,\n  map,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n} from \"rxjs/operators\";\nimport { NgxAdvancedCarouselItemDirective } from \"./ngx-advanced-carousel-item.directive\";\nimport { resizeObservable } from \"./rxjs.observable.resize\";\ndeclare var Hammer;\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: \"ngx-advanced-carousel\",\n  styleUrls: [\"./ngx-advanced-carousel.component.scss\"],\n  templateUrl: \"./ngx-advanced-carousel.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxAdvancedCarouselComponent),\n      multi: true,\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NgxAdvancedCarouselComponent\n  implements ControlValueAccessor, AfterViewInit, OnDestroy {\n  @Input()\n  public get data() {\n    return this._data;\n  }\n  public set data(value) {\n    this._data = value;\n  }\n  /** disable drag event with touch and mouse pan moving, default is `false` */\n  @Input(\"disable-drag\")\n  public get disableDrag() {\n    return this._disableDrag;\n  }\n  public set disableDrag(value) {\n    if (this.rootElm) {\n      if (this._disableDrag !== value) {\n        if (value) {\n          this.destoryHammer();\n        } else {\n          this.hammer = this.bindHammer();\n        }\n      }\n    }\n    this._disableDrag = value;\n  }\n\n  /** is the carousel can move infinite */\n  @Input(\"infinite\")\n  public get infinite() {\n    return this._infinite;\n  }\n  public set infinite(value) {\n    this._infinite = value;\n\n    /* this.infiniteElmRefs.forEach((ref) => {\n      this.addStyle(ref.rootNodes[0], {\n        visibility: this.runLoop ? 'visible' : 'hidden',\n      });\n    }); */\n  }\n\n  /** auto play speed */\n  @Input(\"autoplay-speed\")\n  public get speed() {\n    return this.speedChange.value;\n  }\n  public set speed(value) {\n    this._zone.runOutsideAngular(() => {\n      this.speedChange.next(value);\n    });\n  }\n\n  /**\n   * how many number items to show once, default is `1`\n   * set `auto` to using `[breakpoint]` set value.\n   */\n  @Input(\"show-num\")\n  public get showNum(): number | \"auto\" {\n    return this._showNum;\n  }\n  public set showNum(value: number | \"auto\") {\n    if (value === \"auto\") {\n      this.isAutoNum = true;\n    } else {\n      this._showNum = +value;\n      this.realIndex = this._showNum;\n      if (this.rootElm) {\n        if (!this.verticalModeEnabled) {\n          this.setViewWidth();\n        } else {\n          this.setViewHeight();\n        }\n        this.reSetAlignDistance();\n      }\n      this.currentIndex = this.startIndex;\n    }\n  }\n\n  /** carousel auto play confing */\n  @Input(\"autoplay\")\n  public get autoplay() {\n    return this._autoplay;\n  }\n  public set autoplay(value) {\n    this._autoplay =\n      this.data && this.data.length > this.showNum ? value : false;\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.elms) {\n        this.progressWidth = 0;\n        if (value) {\n          this._zone.runOutsideAngular(() => {\n            this.doNextSub$ = this.doNext.subscribe();\n          });\n        } else {\n          if (this.doNextSub$) {\n            this.doNextSub$.unsubscribe();\n          }\n        }\n      }\n    }\n    // if set autoplay, then the infinite is true\n    if (value) {\n      this.infinite =\n        this.data && this.data.length > this.showNum ? value : false;\n    }\n  }\n\n  @Input() public verticalModeEnabled = false;\n\n  public get currentIndex() {\n    return this._currentIndex;\n  }\n  public set currentIndex(value) {\n    // if now index if not equale to save index, do someting\n    if (this.currentIndex !== value) {\n      // if the value is not contain with the boundary not handlerw\n      if (value < 0) {\n        value = 0;\n      }\n      if (\n        !this.itemElms ||\n        (!this.runLoop && !(0 <= value && value <= this.itemElms.length - 1)) ||\n        (this.data && this.data.length < this._showNum)\n      ) {\n        this.drawView(this.currentIndex);\n        return;\n      }\n      const dir = this._currentIndex > value ? -1 : 1;\n      this._currentIndex = value;\n      if (this.elms) {\n        if (this.autoplay && !this.isFromAuto) {\n          this._zone.runOutsideAngular(() => {\n            this.stopEvent.next();\n            this.callRestart();\n          });\n        }\n        this.realIndex =\n          this.gridBy.col * this.gridBy.row > 1\n            ? this.currentIndex +\n              this._showNum +\n              this.scrollNum * this.gridBy.col\n            : this.currentIndex + this._showNum;\n        if (!this.infinite && this.realIndex > this.elms.length) {\n          if (this.gridBy.col * this.gridBy.row > 1) {\n            this._currentIndex =\n              this.realIndex -\n                this._showNum -\n                this.scrollNum * this.gridBy.col <\n              0\n                ? 0\n                : this.realIndex -\n                  this._showNum -\n                  this.scrollNum * this.gridBy.col;\n          } else {\n            this._currentIndex =\n              this.elms.length - this._showNum < 0\n                ? 0\n                : this.elms.length - this._showNum;\n          }\n          this.realIndex =\n            dir > 0\n              ? Math.ceil(\n                  this.currentIndex / this._showNum +\n                    (this.currentIndex % this._showNum ? 0 : 1)\n                ) >= Math.ceil(this.elms.length / this._showNum)\n                ? this.elms.length\n                : this.currentIndex\n              : this.currentIndex;\n        }\n        this._currentIndex =\n          this.currentIndex < 0 && !this.infinite ? 0 : this.currentIndex;\n        this.drawView(this.currentIndex, true);\n        if (this.infinite) {\n          if (this.currentIndex < this.initialIndex) {\n            this._currentIndex = this.currentIndex + this._showNum * 2;\n          }\n          if (this.currentIndex > this.data.length - this._showNum * 2 - 1) {\n            this._currentIndex =\n              this.currentIndex - this.data.length + this._showNum * 4;\n          }\n          this._zone.runOutsideAngular(() => {\n            timer(this.aniTime - this.aniTime / 8)\n              .pipe(\n                switchMap(() => {\n                  this.drawView(this.currentIndex, false);\n                  return of(null);\n                }),\n                take(1)\n              )\n              .subscribe();\n          });\n        }\n        /* if (this.realIndex > this.elms.length) {\n          const count = (this.realIndex - this.elms.length) % this._showNum;\n          for (let i = 0; i < count; i++) {\n            this.data.shift();\n          }\n          this._currentIndex -= count;\n          this.realIndex =\n            this.gridBy.col * this.gridBy.row > 1\n              ? this.currentIndex +\n                this._showNum +\n                this.scrollNum * this.gridBy.col\n              : this.currentIndex + this._showNum;\n        } */\n      }\n      if (\n        0 <= this.currentIndex &&\n        this.currentIndex <= this.itemElms.length - 1\n      ) {\n        this._zone.run(() => {\n          this.onChange(this.currentIndex);\n          this._cd.detectChanges();\n        });\n      }\n    }\n    this.indexChanged.emit({\n      realIndex: this.realIndex,\n      currentIndex: this.currentIndex,\n      viewSize: this._showNum,\n    });\n    this.isFromAuto = false;\n  }\n\n  public get progressWidth() {\n    return this._porgressWidth;\n  }\n  public set progressWidth(value) {\n    if (this.progressElm !== undefined && this.autoplay) {\n      this._porgressWidth = value;\n      this._renderer.setStyle(\n        (this.progressContainerElm.nativeElement as HTMLElement).children[0],\n        \"width\",\n        `${this.progressWidth}%`\n      );\n    }\n  }\n\n  public get grabbing() {\n    return this._grabbing;\n  }\n  public set grabbing(value: boolean) {\n    if (this._grabbing !== value) {\n      this._zone.run(() => {\n        this._grabbing = value;\n        if (value) {\n          this._renderer.addClass(this.containerElm, \"grabbing\");\n        } else {\n          this.panCount = 0;\n          this.callRestart();\n          this._renderer.removeClass(this.containerElm, \"grabbing\");\n        }\n        this._cd.detectChanges();\n      });\n    }\n  }\n\n  private set left(value: number) {\n    if (!this.verticalModeEnabled) {\n      if (isPlatformBrowser(this.platformId)) {\n        this._renderer.setStyle(\n          this.containerElm,\n          \"transform\",\n          `translateX(${\n            (value + (this.currentIndex !== 0 ? this.padding : 0)) *\n            (this.align === \"right\" ? -1 : 1)\n          }px)`\n        );\n      } else {\n        this._renderer.setStyle(\n          this.containerElm,\n          \"transform\",\n          `translateX(${value}%)`\n        );\n      }\n    } else {\n      if (isPlatformBrowser(this.platformId)) {\n        this._renderer.setStyle(\n          this.containerElm,\n          \"transform\",\n          `translateY(${\n            value + (this.currentIndex !== 0 ? this.padding : 0)\n          }px)`\n        );\n      } else {\n        this._renderer.setStyle(\n          this.containerElm,\n          \"transform\",\n          `translateY(${value}%)`\n        );\n      }\n    }\n  }\n\n  private get maxRightIndex() {\n    let addIndex = 0;\n    switch (this.align) {\n      case \"left\":\n        addIndex = 0;\n        break;\n      case \"center\":\n        addIndex = (this.showNum as number) - 1;\n        break;\n      case \"right\":\n        addIndex = 0;\n        break;\n      default:\n        addIndex = 0;\n        break;\n    }\n    return this.itemElms.length - 1 - this._showNum + 1 + addIndex;\n  }\n\n  private get runLoop() {\n    return this.autoplay || this.infinite;\n  }\n  private get lengthOne() {\n    return this.itemElms.length === 1;\n  }\n\n  private get rootElmWidth() {\n    return isPlatformBrowser(this.platformId)\n      ? this.rootElm.getBoundingClientRect().width\n      : 100;\n  }\n\n  private get rootElmHeight() {\n    return isPlatformBrowser(this.platformId)\n      ? this.rootElm.getBoundingClientRect().height\n      : 100;\n  }\n\n  private set containerElmWidth(value: number) {\n    if (!this.verticalModeEnabled) {\n      this.setStyle(this.containerElm, \"width\", value);\n    } else {\n      this.containerElmHeight = value;\n    }\n  }\n\n  private set containerElmHeight(value: number) {\n    this.setStyle(this.containerElm, \"height\", value);\n  }\n\n  @Output() public indexChanged: EventEmitter<any> = new EventEmitter();\n\n  private _startIndex = 0;\n\n  @Input()\n  private get startIndex() {\n    return this._startIndex;\n  }\n  private set startIndex(val) {\n    this._startIndex = val;\n    this.currentIndex = this._startIndex;\n  }\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: any,\n    @Inject(DOCUMENT) private _document,\n    private _renderer: Renderer2,\n    private _zone: NgZone,\n    private _cd: ChangeDetectorRef\n  ) {}\n  @ViewChild(\"containerElm\", { static: false }) public container: ElementRef;\n  @ViewChildren(\"viewArea\") public viewArea: QueryList<ElementRef>;\n  @ViewChild(\"prev\", { static: false }) public btnPrev: ElementRef;\n  @ViewChild(\"next\", { static: false }) public btnNext: ElementRef;\n  @ViewChild(\"progress\", { static: false })\n  public progressContainerElm: ElementRef;\n\n  // get all item elms\n  @ContentChildren(NgxAdvancedCarouselItemDirective, {\n    descendants: true,\n    read: ElementRef,\n  })\n  public itemElms: QueryList<ElementRef>;\n\n  @ContentChild(\"carouselPrev\", { static: false })\n  public contentPrev: TemplateRef<any>;\n  @ContentChild(\"carouselNext\", { static: false })\n  public contentNext: TemplateRef<any>;\n  @ContentChild(\"carouselDot\", { static: false })\n  public dotElm: TemplateRef<any>;\n  @ContentChild(\"carouselItemTemplate\", { static: false })\n  public carouselItemTemplate: TemplateRef<any>;\n  @ContentChild(\"carouselProgress\", { static: false })\n  public progressElm: TemplateRef<any>;\n\n  public _data: any[];\n\n  @Output() public mappedData: EventEmitter<any[]> = new EventEmitter();\n  /** when infinite is true, the animation time with item, default is 400. */\n  @Input() public aniTime = 400;\n  /** this class will add in #containerElm when model change */\n  @Input() public aniClass = \"transition\";\n\n  /** this class will add when carousel auto play,\n   * this default autoplay animation is same as aniClass\n   */\n  @Input() public aniClassAuto = this.aniClass;\n\n  // tslint:disable-next-line: no-input-rename\n  @Input(\"show-next-prev-buttons\") public showButtonsMethod:\n    | \"always\"\n    | \"auto-hide\"\n    | \"auto-disable\" = \"always\";\n\n  /**\n   * user move picture with the container width rate,\n   * when more than that rate, it will go to next or prev,\n   * set false will never move with distance rate,\n   * default is `0.15`\n   */\n  @Input(\"pan-boundary\") public panBoundary: number | false = 0.15;\n\n  /** when show-num is bigger than 1, the first item align, defaulte is `center` */\n  @Input() public align: \"left\" | \"center\" | \"right\" | \"top\" | \"bottom\" =\n    \"center\";\n\n  /**\n   * disable when drag occur the child element will follow touch point.\n   * default is `false`\n   */\n  @Input(\"not-follow-pan\") public notDrag = false;\n\n  @Input() public trackByKey = \"code\";\n  /**\n   * the event binding state for stop auto play when mourse moveover\n   */\n  @Input(\"mourse-enable\") public mourseEnable = false;\n  /** each auto play between time */\n  @Input(\"between-delay\") public delay = 8000;\n  /** auto play direction, default is `right`. */\n  @Input(\"autoplay-direction\") public direction: \"left\" | \"right\" = \"right\";\n  /** how many number with each scroll, default is `1`. */\n  @Input(\"scroll-num\") public scrollNum = 1;\n  /** Could user scroll many item once, simulate with scrollbar, default is `false` */\n  @Input(\"drag-many\") public isDragMany = false;\n  /** Minimal velocity required before recognizing, unit is in px per ms, default `0.3` */\n  @Input(\"swipe-velocity\") public swipeVelocity = 0.3;\n\n  @Input() public isRtl = false;\n  /**\n   * switch show number with custom logic like css @media (min-width: `number`px)\n   */\n  @Input() public breakpoint: Array<{\n    gridBy?;\n    screenSize: \"xxl\" | \"xl\" | \"lg\" | \"md\" | \"sm\" | \"xs\";\n    number;\n    scrollNum?;\n    padding?;\n  }> = [];\n\n  @Input() public screenSizeMap = {\n    xxl: 1440,\n    // tslint:disable-next-line: object-literal-sort-keys\n    xl: 1200,\n    lg: 992,\n    md: 768,\n    sm: 576,\n    xs: 0,\n  };\n\n  @Input() padding: number = 0;\n\n  public leaveObs$ = merge(\n    fromEvent(this._document, \"mouseup\"),\n    fromEvent(this._document, \"touchend\")\n  ).pipe(\n    tap((e: Event) => {\n      this.grabbing = false;\n      e.stopPropagation();\n      e.preventDefault();\n    })\n  );\n\n  private isFromAuto = true;\n  private isAutoNum = false;\n  private mouseOnContainer = false;\n  private alignDistance = 0;\n  private elmWidth = 0;\n  private elmHeight = 0;\n\n  private rootElm: HTMLElement;\n  private containerElm: HTMLElement;\n\n  private elms: Array<HTMLElement>;\n\n  private hammer;\n\n  private doNextSub$: Subscription;\n  private doNext: Observable<any>;\n\n  private restart = new BehaviorSubject<any>(null);\n  private speedChange = new BehaviorSubject(5000);\n  private stopEvent = new Subject<any>();\n  private destroy$ = new Subject<any>();\n\n  private _porgressWidth = 0;\n  private _currentIndex = 0;\n  public _showNum = 1;\n  private _autoplay = false;\n  private _infinite = false;\n  private _grabbing = false;\n  private _disableDrag = false;\n  public gridBy = { col: 1, row: 1 };\n\n  private panCount = 0;\n\n  // this variable use for check the init value is write with ngModel,\n  // when init first, not set with animation\n\n  public realIndex = this._currentIndex;\n\n  public wrapperWidth;\n\n  public singleTimeRun = true;\n  private initialIndex = 0;\n  public originalData = [];\n\n  private _infineDataCount = 0;\n  public ngAfterViewInit() {\n    this.rootElm = this.container.nativeElement;\n    this.containerElm = this.rootElm.children[0] as HTMLElement;\n\n    this.init();\n\n    forkJoin([\n      ...this.bindClick(),\n      // when item changed, remove old hammer binding, and reset width\n      this.itemElms.changes.pipe(\n        // detectChanges to change view dots\n        tap(() => {\n          this.destroy();\n          this.init();\n          this.progressWidth = 0;\n        }),\n        tap(() => this._cd.detectChanges())\n      ),\n      resizeObservable(this.rootElm, () => this.containerResize()),\n    ])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe();\n  }\n\n  public ngOnDestroy() {\n    this.destroy();\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n  }\n\n  public writeValue(value: any) {\n    if (value || value === 0) {\n      this.currentIndex = value;\n    }\n  }\n\n  public registerOnChange(fn: (value: any) => any) {\n    this.onChange = fn;\n  }\n  public registerOnTouched(fn: () => any) {\n    this.onTouched = fn;\n  }\n  private onChange = (_: any) => {};\n  private onTouched = () => {};\n\n  private init() {\n    this.initVariable();\n    this.setViewWidth(true);\n    this.reSetAlignDistance();\n    if (!this.disableDrag) {\n      this.hammer = this.bindHammer();\n    }\n    this.drawView(this.currentIndex, false);\n    this.currentIndex = this.startIndex;\n    /* if (isPlatformBrowser(this.platformId) && this.runLoop) {\n      this.addInfiniteElm();\n    } */\n  }\n\n  private destroy() {\n    this.destoryHammer();\n\n    if (this.autoplay) {\n      this.doNextSub$.unsubscribe();\n    }\n  }\n\n  private destoryHammer() {\n    if (this.hammer) {\n      this.hammer.destroy();\n    }\n  }\n\n  private containerResize() {\n    this.setViewWidth();\n    this.reSetAlignDistance();\n\n    this.currentIndex = this.startIndex || this.initialIndex;\n\n    this.drawView(this.currentIndex, false);\n  }\n\n  private initVariable() {\n    this._zone.runOutsideAngular(() => {\n      this.elms = this.itemElms.toArray().map((x) => x.nativeElement);\n\n      let startEvent = this.restart.asObservable();\n      let stopEvent = this.stopEvent.asObservable();\n      if (this.mourseEnable) {\n        startEvent = merge(\n          startEvent,\n          fromEvent(this.containerElm, \"mouseleave\").pipe(\n            filter(() => !this.grabbing),\n            tap(() => (this.mouseOnContainer = false))\n          )\n        );\n        stopEvent = merge(\n          stopEvent,\n          fromEvent(this.containerElm, \"mouseover\").pipe(\n            tap(() => (this.mouseOnContainer = true))\n          )\n        );\n      }\n\n      this.doNext = startEvent.pipe(\n        switchMap(() => this.speedChange),\n        switchMap(() =>\n          timer(this.delay).pipe(\n            switchMap(() => this.runProgress(20)),\n            tap(() => {\n              this.isFromAuto = true;\n              if (this.direction === \"left\") {\n                this.currentIndex -= this.scrollNum;\n              } else {\n                this.currentIndex += this.scrollNum;\n              }\n            }),\n            takeUntil(stopEvent.pipe(tap(() => (this.progressWidth = 0))))\n          )\n        )\n      );\n\n      if (this.autoplay) {\n        this.doNextSub$ = this.doNext.subscribe();\n      }\n    });\n  }\n\n  private reSetAlignDistance() {\n    switch (this.align) {\n      case \"center\":\n        this.alignDistance = (this.rootElmWidth - this.elmWidth) / 2;\n        break;\n      case \"left\":\n        this.alignDistance = 0;\n        break;\n      case \"right\":\n        this.alignDistance = 0;\n        break;\n      case \"top\":\n        this.alignDistance = 0;\n        break;\n      case \"bottom\":\n        this.alignDistance = 0;\n    }\n  }\n\n  private setViewWidth(isInit?: boolean) {\n    if (!this.verticalModeEnabled) {\n      if (this.isAutoNum) {\n        this._showNum = this.getAutoNum();\n        this.realIndex = this._showNum;\n        this.currentIndex = this.startIndex;\n      }\n      this._infineDataCount = this._showNum * 2;\n      this.infinite =\n        this.data && this.data.length > this._showNum ? this.infinite : false;\n      this._renderer.addClass(this.containerElm, \"grab\");\n      if (isInit) {\n        // remain one elm height\n        this.originalData = [];\n        this.initData(this._infineDataCount);\n        this._renderer.addClass(\n          this.containerElm,\n          \"ngx-advanced-carousel-display-nowrap\"\n        );\n      }\n      this.elmWidth =\n        this.rootElmWidth / (this._showNum / this.gridBy.row) -\n        (this.padding * 2) /\n          (this.gridBy.col > 1\n            ? this.gridBy.col\n            : this._showNum / this.gridBy.row);\n\n      this._renderer.removeClass(\n        this.containerElm,\n        \"ngx-advanced-carousel-display-nowrap\"\n      );\n\n      this.containerElmWidth =\n        (this.rootElmWidth - this.padding * 2) *\n        (this.elms.length / this._showNum);\n\n      this._renderer.setStyle(this.containerElm, \"position\", \"relative\");\n      this.viewArea.forEach((element) => {\n        element.nativeElement.setAttribute(\n          \"style\",\n          `width:${this.rootElmWidth - this.padding * 2}px`\n        );\n      });\n\n      this.elms.forEach((elm: HTMLElement) => {\n        this.setStyle(elm, \"width\", this.elmWidth);\n      });\n    } else {\n      this.setViewHeight(isInit);\n    }\n    this._cd.detectChanges();\n  }\n\n  private setViewHeight(isInit?: boolean) {\n    if (this.isAutoNum) {\n      this._showNum = this.getAutoNum();\n      this.realIndex = this._showNum;\n      this.currentIndex = this.startIndex;\n    }\n    this._infineDataCount = this._showNum * 2;\n    this.infinite =\n      this.data && this.data.length > this._showNum ? this.infinite : false;\n    this._renderer.addClass(this.containerElm, \"grab\");\n    if (isInit) {\n      // remain one elm height\n      this.initData(this._infineDataCount);\n      this._renderer.addClass(\n        this.containerElm,\n        \"ngx-advanced-carousel-display-nowrap\"\n      );\n    }\n    this.elmWidth =\n      this.rootElmHeight / (this._showNum / this.gridBy.row) -\n      (this.padding * 2) /\n        (this.gridBy.col > 1\n          ? this.gridBy.col\n          : this._showNum / this.gridBy.row);\n\n    this._renderer.removeClass(\n      this.containerElm,\n      \"ngx-advanced-carousel-display-nowrap\"\n    );\n\n    this.containerElmWidth =\n      (this.rootElmHeight - this.padding * 2) *\n      (this.elms.length / this._showNum);\n\n    this._renderer.setStyle(this.containerElm, \"position\", \"relative\");\n    this.viewArea.forEach((element) => {\n      element.nativeElement.setAttribute(\n        \"style\",\n        `height:${this.rootElmHeight - this.padding * 2}px`\n      );\n    });\n\n    this.elms.forEach((elm: HTMLElement) => {\n      this.setStyle(elm, \"height\", this.elmWidth);\n    });\n  }\n\n  private bindHammer() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return null;\n    }\n    return this._zone.runOutsideAngular(() => {\n      const hm = new Hammer.Manager(this.containerElm);\n\n      const pan = new Hammer.Pan({\n        direction: Hammer.DIRECTION_HORIZONTAL,\n        threshold: 0,\n      });\n\n      hm.add(pan);\n\n      hm.on(\"panleft panright panend pancancel\", (e) => {\n        if (this.lengthOne) {\n          return;\n        }\n\n        this.removeContainerTransition();\n\n        if (this.autoplay) {\n          this._zone.runOutsideAngular(() => {\n            this.stopEvent.next();\n          });\n        }\n\n        switch (e.type) {\n          case \"panleft\":\n          case \"panright\":\n            this.panCount++;\n            if (this.panCount < 2) {\n              return;\n            }\n\n            this.grabbing = true;\n            if (this.align !== \"center\" && this.showNum >= this.elms.length) {\n              this.hammer.stop(true);\n              return;\n            }\n            if (!this.runLoop && this.outOfBound(e.type)) {\n              this.verticalModeEnabled ? e.deltaY : (e.deltaX *= 0.2);\n            }\n\n            if (!this.notDrag) {\n              this.left =\n                -this.currentIndex * this.elmWidth +\n                this.alignDistance +\n                (this.verticalModeEnabled\n                  ? e.deltaY\n                  : this.align === \"right\"\n                  ? -e.deltaX\n                  : e.deltaX);\n            }\n\n            if (!this.isDragMany) {\n              if (\n                Math.abs(this.verticalModeEnabled ? e.deltaY : e.deltaX) >\n                this.elmWidth * 0.5\n              ) {\n                if ((this.verticalModeEnabled ? e.deltaY : e.deltaX) > 0) {\n                  if (this.align === \"right\") {\n                    this.currentIndex += this.scrollNum;\n                  } else {\n                    this.currentIndex -= this.scrollNum;\n                  }\n                } else {\n                  if (this.align === \"right\") {\n                    this.currentIndex -= this.scrollNum;\n                  } else {\n                    this.currentIndex += this.scrollNum;\n                  }\n                }\n                this.hammer.stop(true);\n                return;\n              }\n            }\n            break;\n          case \"pancancel\":\n            this.drawView(this.currentIndex);\n            break;\n\n          case \"panend\":\n            if (\n              this.panBoundary !== false &&\n              Math.abs(this.verticalModeEnabled ? e.deltaY : e.deltaX) >\n                this.elmWidth * this.panBoundary\n            ) {\n              const moveNum = this.isDragMany\n                ? Math.ceil(\n                    Math.abs(this.verticalModeEnabled ? e.deltaY : e.deltaX) /\n                      this.elmWidth\n                  )\n                : this.scrollNum;\n\n              const prevIndex = this.currentIndex - moveNum;\n              const nextIndex = this.currentIndex + moveNum;\n\n              if ((this.verticalModeEnabled ? e.deltaY : e.deltaX) > 0) {\n                this.align === \"right\"\n                  ? this.goNext(nextIndex)\n                  : this.goPrev(prevIndex);\n              } else {\n                this.align === \"right\"\n                  ? this.goPrev(prevIndex)\n                  : this.goNext(nextIndex);\n              }\n              break;\n            } else if (e.velocityX < -this.swipeVelocity && e.distance > 10) {\n              this.align === \"right\"\n                ? this.goPrev(this.currentIndex - this.scrollNum)\n                : this.goNext(this.currentIndex + this.scrollNum);\n            } else if (e.velocityX > this.swipeVelocity && e.distance > 10) {\n              this.align === \"right\"\n                ? this.goNext(this.currentIndex + this.scrollNum)\n                : this.goPrev(this.currentIndex - this.scrollNum);\n            } else {\n              this.drawView(this.currentIndex);\n            }\n            break;\n        }\n      });\n\n      return hm;\n    });\n  }\n\n  private goPrev(prevIndex: number) {\n    if (!this.runLoop && prevIndex < 0) {\n      prevIndex = 0;\n      this.drawView(0);\n    }\n    this.currentIndex = prevIndex;\n  }\n\n  private goNext(nextIndex: number) {\n    if (!this.runLoop && nextIndex > this.maxRightIndex) {\n      nextIndex = this.maxRightIndex;\n      this.drawView(nextIndex);\n    }\n    this.currentIndex = nextIndex;\n  }\n\n  private bindClick() {\n    if (this.btnNext && this.btnPrev) {\n      return [\n        fromEvent(this.btnNext.nativeElement, \"click\").pipe(\n          map(() => (this.currentIndex += this.scrollNum))\n        ),\n        fromEvent(this.btnPrev.nativeElement, \"click\").pipe(\n          map(() => {\n            return (this.currentIndex = this.currentIndex - this.scrollNum);\n          })\n        ),\n      ];\n    }\n    return [];\n  }\n\n  private callRestart() {\n    if (this.autoplay && !this.mouseOnContainer && !this.grabbing) {\n      this._zone.runOutsideAngular(() => {\n        this.restart.next(null);\n      });\n    }\n  }\n\n  private drawView(\n    index: number,\n    isAnimation = true,\n    isFromAuto = this.isFromAuto\n  ) {\n    if (this.elms.length > 1 && this.elms.length > this._showNum) {\n      this.removeContainerTransition();\n      this.left = -index * this.elmWidth + this.alignDistance;\n\n      if (isAnimation) {\n        if (isFromAuto) {\n          this._renderer.addClass(this.containerElm, this.aniClassAuto);\n        } else {\n          this._renderer.addClass(this.containerElm, this.aniClass);\n        }\n      }\n    } else {\n      this.left = this.alignDistance;\n    }\n  }\n\n  private removeContainerTransition() {\n    this._renderer.removeClass(this.containerElm, this.aniClass);\n    this._renderer.removeClass(this.containerElm, this.aniClassAuto);\n  }\n\n  private outOfBound(type) {\n    switch (type) {\n      case \"panleft\":\n        return this.currentIndex >= this.maxRightIndex;\n      case \"panright\":\n        return this.currentIndex <= 0;\n    }\n  }\n\n  private runProgress(betweenTime): Observable<any> {\n    return this._zone.runOutsideAngular(() => {\n      const howTimes = this.speed / betweenTime;\n      const everyIncrease = (100 / this.speed) * betweenTime;\n      return interval(betweenTime).pipe(\n        tap((t) => {\n          this.progressWidth = (t % howTimes) * everyIncrease;\n        }),\n        bufferCount(Math.round(howTimes), 0)\n      );\n    });\n  }\n  private initData(showNum) {\n    if (!this.originalData.length) {\n      this.originalData = [...this.data];\n    }\n\n    if (this.infinite) {\n      this.singleTimeRun = false;\n      this.data = this.arrayCreator(this.originalData, showNum);\n      this._currentIndex = showNum;\n      this.initialIndex = this.currentIndex;\n    }\n  }\n\n  private getAutoNum() {\n    const currWidth = this.rootElmWidth;\n    if (this.breakpoint.length > 0) {\n      const now = this.breakpoint.find((b) => {\n        return this.screenSizeMap[b.screenSize] <= currWidth;\n      });\n      if (now) {\n        this.padding = now.padding || this.padding;\n        if (now.gridBy) {\n          this.scrollNum = now.gridBy.col || now.scrollNum || now.number;\n          this.gridBy = now.gridBy;\n          const showNum = now.gridBy.col * now.gridBy.row || now.number;\n          return showNum;\n        } else {\n          this.scrollNum = now.scrollNum || now.number;\n          this.gridBy = { col: now.number, row: 1 };\n          return now.number;\n        }\n      }\n      this.padding =\n        this.breakpoint[this.breakpoint.length - 1].padding || this.padding;\n      if (this.breakpoint[this.breakpoint.length - 1].gridBy) {\n        this.scrollNum =\n          this.breakpoint[this.breakpoint.length - 1].gridBy.col ||\n          this.breakpoint[this.breakpoint.length - 1].scrollNum ||\n          this.breakpoint[this.breakpoint.length - 1].number;\n        this.gridBy = this.breakpoint[this.breakpoint.length - 1].gridBy;\n        const showNum =\n          this.breakpoint[this.breakpoint.length - 1].gridBy.col *\n            this.breakpoint[this.breakpoint.length - 1].gridBy.row ||\n          this.breakpoint[this.breakpoint.length - 1].number;\n        return showNum;\n      } else {\n        this.scrollNum =\n          this.breakpoint[this.breakpoint.length - 1].scrollNum ||\n          this.breakpoint[this.breakpoint.length - 1].number;\n        this.gridBy = { col: 1, row: 1 };\n        return this.breakpoint[this.breakpoint.length - 1].number;\n      }\n    }\n\n    const initNum = 3;\n    if (currWidth > 200) {\n      return Math.floor(initNum + currWidth / 100);\n    }\n\n    return initNum;\n  }\n\n  private setStyle(elm: HTMLElement, style: string, value: number) {\n    if (isPlatformBrowser(this.platformId)) {\n      this._renderer.setStyle(elm, style, `${value}px`);\n    } else {\n      this._renderer.setStyle(elm, style, `${value}%`);\n    }\n  }\n\n  public trackByFcn(index, item) {\n    if (!item || item[this.trackByKey]) {\n      return null;\n    }\n    return item[this.trackByKey];\n  }\n\n  public arrayCreator(arr, count) {\n    const data = [...arr];\n    for (let i = 0; i < count; i++) {\n      data.unshift(arr[arr.length - 1 - (i % arr.length)]);\n      data.push(arr[i % arr.length]);\n    }\n    return data;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgxAdvancedCarouselItemDirective } from './ngx-advanced-carousel-item.directive';\nimport { NgxAdvancedCarouselComponent } from './ngx-advanced-carousel.component';\n\n@NgModule({\n  declarations: [NgxAdvancedCarouselComponent, NgxAdvancedCarouselItemDirective],\n  exports: [NgxAdvancedCarouselComponent, NgxAdvancedCarouselItemDirective],\n  imports: [CommonModule, FormsModule],\n})\nexport class NgxAdvancedCarouselModule {}\n","/*\n * Public API Surface of ngx-advanced-carousel\n */\n\nexport * from './lib/rxjs.observable.resize';\nexport * from './lib/ngx-advanced-carousel-item.directive';\nexport * from './lib/ngx-advanced-carousel.component';\nexport * from './lib/ngx-advanced-carousel.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}